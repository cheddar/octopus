# This file should be run with 'source' (also known as '.' on linux/macs).
#
# It allows the user to login and then query data via the octopus query endpoint

DEFAULT_ENV="http://localhost:8009"
SESSION_TOKEN=""

# Login to the tidepool-platfrom and get a session-token
tp_logon() {

    if [ -z "$1" ]; then
        echo "your user name is required i.e. tp_logon <username>"
        return
    fi

    SESSION_TOKEN=$(curl -s -X POST -I -u $1 $DEFAULT_ENV/auth/login | grep x-tidepool-session-token)

    # are you logged in?
    if [ -z "$SESSION_TOKEN" ]; then
        echo "something went wrong trying to login. Did you do tp_logon <username>?"
        return
    fi
    echo "Your now logged in"
}

# Logout by clearing the token we are storing
tp_logout() {
    SESSION_TOKEN=""
    echo "You have now logged out"
}

# Run the data query for a given user id
tp_query() {

    # are you logged in?
    if [ -z "$SESSION_TOKEN" ]; then
        echo "please login first i.e. tp_logon <username>"
        return
    fi

    # do we have a user id for us to query?
    if [ -z "$1" ]; then
        echo "we need the id of the user whose data you are querying i.e. tp_query <userid>"
        return
    fi

    # do you want to specify different types to query for?
    QUERY_TYPES="cbg, smbg, bolus, wizard"

    if [ -n "$2" ]; then
        QUERY_TYPES=$2
    fi

    if [ -n "$3" ]; then
        # e.g. "WHERE time > 2014-11-24T05:00:00.000Z AND time < 2014-12-24T05:00:00.000Z"
        QUERY_WHERE=$3
    fi

    QUERY="METAQUERY WHERE userid IS $1 QUERY TYPE IN $QUERY_TYPES $QUERY_WHERE SORT BY time AS Timestamp REVERSED"

    echo "[$QUERY]"
    read  -p "o[k] to run your query " input

    if [ "$input" = "o" ]; then
        # get it done
        # -H '$SESSION_TOKEN' \
        curl -X POST \
        -d "$QUERY" \
        $DEFAULT_ENV/query/data
    else
        echo ""
        echo "didn't run [$QUERY]"
    fi
}